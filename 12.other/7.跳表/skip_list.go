package main

/*
	关于跳表的介绍：极客时间 17
	单链表的查找时间复杂度为 O(n)，跳表就是在单链表上构建索引层，采用二分查找的思想来快速检索数据。
	跳表查找的时间复杂度：O(logn)，和二分查找相同。
	跳表的空间消耗：O(n)
*/
/*
	题目：leetcode 1206
		不使用任何库函数，设计一个跳表。
		跳表是在 O(log(n)) 时间内完成增加、删除、搜索操作的数据结构。
		跳表相比于树堆与红黑树，其功能与性能相当，并且跳表的代码长度相较下更短，其设计思想与链表相似。

		跳表中有很多层，每一层是一个短的链表。
		在第一层的作用下，增加、删除和搜索操作的时间复杂度不超过 O(n)。
		跳表的每一个操作的平均时间复杂度是 O(log(n))，空间复杂度是 O(n)。

		在本题中，你的设计应该要包含这些函数：
			bool search(int target) : 返回target是否存在于跳表中。
			void add(int num): 插入一个元素到跳表。
			bool erase(int num): 在跳表中删除一个值，如果 num 不存在，直接返回false.
								如果存在多个 num ，删除其中任意一个即可。

		注意，跳表中可能存在多个相同的值，你的代码需要处理这种情况。
*/
